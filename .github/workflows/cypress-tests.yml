name: Cypress E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 6 * * *'

jobs:
  docker-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Criar arquivo de ambiente
        run: |
          cat > cypress.env.json << 'EOF'
          {
            "ADMIN_EMAIL": "admin@test.com",
            "ADMIN_PASSWORD": "admin123",
            "USER_EMAIL": "user@test.com",
            "USER_PASSWORD": "user123",
            "INVALID_EMAIL": "invalid@test.com",
            "NONEXISTENT_EMAIL": "nonexistent@test.com"
          }
          EOF

      - name: Build e executar testes com Docker
        run: |
          docker compose up --build -d
          docker compose run --rm cypress
          EXIT_CODE=$?
          docker compose down
          exit $EXIT_CODE

      - name: Copiar resultados do container (se falhar)
        if: always()
        run: |
          mkdir -p cypress/videos cypress/screenshots cypress/reports
          docker-compose run --rm --no-deps --entrypoint "" cypress sh -c "
            cp -r /e2e/cypress/videos/* /e2e/cypress/videos/ 2>/dev/null || true
            cp -r /e2e/cypress/screenshots/* /e2e/cypress/screenshots/ 2>/dev/null || true
            cp -r /e2e/cypress/reports/* /e2e/cypress/reports/ 2>/dev/null || true
          " || true

      - name: Upload Docker test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker-test-results
          path: |
            cypress/videos
            cypress/screenshots
            cypress/reports
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: [docker-tests]
    if: github.ref == 'refs/heads/main' && success()

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Deploy para staging
        run: |
          echo "ðŸš€ Deploy seria executado aqui"
          echo "âœ… Todos os testes passaram - ambiente estÃ¡ pronto para deploy"
